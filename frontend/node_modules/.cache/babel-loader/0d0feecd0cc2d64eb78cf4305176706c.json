{"ast":null,"code":"import axios from 'axios';\nimport { REGISTER_SUCCESS, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from './types';\nimport { setAlert } from './alert';\nimport setAuthToken from '../utils/setAuthToken';\n\n// Load user\nexport const loadUser = () => async dispath => {\n  if (localStorage.token) setAuthToken(localStorage.token);\n  try {\n    const res = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/auth`);\n    dispath({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispath({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n// Register user\nexport const register = _ref => {\n  let {\n    name,\n    email,\n    password,\n    phone,\n    address\n  } = _ref;\n  return async dispatch => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      username: name,\n      email,\n      password,\n      address,\n      phone\n    });\n    try {\n      const res = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/user`, body, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n\n      // Load user\n      dispatch(loadUser());\n    } catch (err) {\n      // Get errors array sent by api\n      if (!err.response) {\n        dispatch(setAlert('Server error', 'error'));\n      } else {\n        const errors = err.response.data.errors;\n        if (errors) {\n          errors.forEach(error => dispatch(setAlert(error.msg, 'error')));\n        }\n      }\n      dispatch({\n        type: LOGIN_FAIL\n      });\n    }\n  };\n};\n\n// Login user\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  try {\n    const res = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/auth`, body, config);\n    console.log(res.data);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n\n    // Load user\n    dispatch(loadUser());\n  } catch (err) {\n    // Get errors array sent by api\n    if (!err.response) {\n      dispatch(setAlert('Server error', 'error'));\n    } else {\n      const errors = err.response.data.errors;\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, 'error')));\n      }\n    }\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n// Skip login\nexport const skipLogin = () => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = {\n    email: 'test@test.com',\n    password: '123456'\n  };\n  try {\n    const res = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/auth`, body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n\n    // Load user\n    dispatch(loadUser());\n  } catch (err) {\n    // Get errors array sent by api\n    if (!err.response) {\n      dispatch(setAlert('Server error', 'error'));\n    } else {\n      const errors = err.response.data.errors;\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, 'error')));\n      }\n    }\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"names":["axios","REGISTER_SUCCESS","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","setAlert","setAuthToken","loadUser","dispath","localStorage","token","res","get","process","env","REACT_APP_API_BASE_URL","type","payload","data","err","register","_ref","name","email","password","phone","address","dispatch","config","headers","body","JSON","stringify","username","post","response","errors","forEach","error","msg","login","console","log","skipLogin","logout"],"sources":["/Users/asantamariammathew/Desktop/online-auction-system-frontend-main/src/actions/auth.js"],"sourcesContent":["import axios from 'axios';\nimport {\n  REGISTER_SUCCESS,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from './types';\nimport { setAlert } from './alert';\nimport setAuthToken from '../utils/setAuthToken';\n\n// Load user\nexport const loadUser = () => async (dispath) => {\n  if (localStorage.token) setAuthToken(localStorage.token);\n\n  try {\n    const res = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/auth`);\n    dispath({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispath({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n// Register user\nexport const register =\n  ({ name, email, password, phone, address }) =>\n  async (dispatch) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const body = JSON.stringify({ username: name, email, password, address, phone });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_BASE_URL}/user`,\n        body,\n        config\n      );\n\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n\n      // Load user\n      dispatch(loadUser());\n    } catch (err) {\n      // Get errors array sent by api\n      if (!err.response) {\n        dispatch(setAlert('Server error', 'error'));\n      } else {\n        const errors = err.response.data.errors;\n        if (errors) {\n          errors.forEach((error) => dispatch(setAlert(error.msg, 'error')));\n        }\n      }\n\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n    }\n  };\n\n// Login user\nexport const login = (email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_BASE_URL}/auth`,\n      body,\n      config\n    );\n    console.log(res.data);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n\n    // Load user\n    dispatch(loadUser());\n  } catch (err) {\n    // Get errors array sent by api\n    if (!err.response) {\n      dispatch(setAlert('Server error', 'error'));\n    } else {\n      const errors = err.response.data.errors;\n      if (errors) {\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'error')));\n      }\n    }\n\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\n// Skip login\nexport const skipLogin = () => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = { email: 'test@test.com', password: '123456' };\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_BASE_URL}/auth`,\n      body,\n      config\n    );\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n\n    // Load user\n    dispatch(loadUser());\n  } catch (err) {\n    // Get errors array sent by api\n    if (!err.response) {\n      dispatch(setAlert('Server error', 'error'));\n    } else {\n      const errors = err.response.data.errors;\n      if (errors) {\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'error')));\n      }\n    }\n\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  dispatch({\n    type: LOGOUT,\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}